@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<div class="d-flex">
    <ul class="navbar-nav">
        @if (SignInManager.IsSignedIn(User))
        {
            <li class="nav-item">
                <a class="nav-link" asp-page="/Contests/Index" title=""><i class="fas fa-edit"></i> コンテスト編集</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index"><i class="fas fa-user-alt"></i> アカウント</a>
            </li>
            <li class="nav-item">
                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
                    <button type="submit" class="nav-link btn btn-link"><i class="fas fa-sign-out-alt"></i> ログアウト</button>
                </form>
            </li>
        }
        else
        {
            @*<li class="nav-item">
                <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>*@
        }
    </ul>
</div>
